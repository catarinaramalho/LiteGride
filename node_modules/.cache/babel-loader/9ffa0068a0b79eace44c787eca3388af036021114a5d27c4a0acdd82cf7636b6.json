{"ast":null,"code":"\"use strict\";\n\n/**\r\n * dd-base-impl.ts 7.2.3\r\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DDBaseImplement = void 0;\nclass DDBaseImplement {\n  constructor() {\n    /** @internal */\n    this._eventRegister = {};\n  }\n  /** returns the enable state, but you have to call enable()/disable() to change (as other things need to happen) */\n  get disabled() {\n    return this._disabled;\n  }\n  on(event, callback) {\n    this._eventRegister[event] = callback;\n  }\n  off(event) {\n    delete this._eventRegister[event];\n  }\n  enable() {\n    this._disabled = false;\n  }\n  disable() {\n    this._disabled = true;\n  }\n  destroy() {\n    delete this._eventRegister;\n  }\n  triggerEvent(eventName, event) {\n    if (!this.disabled && this._eventRegister && this._eventRegister[eventName]) return this._eventRegister[eventName](event);\n  }\n}\nexports.DDBaseImplement = DDBaseImplement;","map":{"version":3,"names":["DDBaseImplement","constructor","_eventRegister","disabled","_disabled","on","event","callback","off","enable","disable","destroy","triggerEvent","eventName","exports"],"sources":["/home/catarina.santos/litegride/node_modules/gridstack/src/dd-base-impl.ts"],"sourcesContent":["/**\n * dd-base-impl.ts 7.2.3\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\n\nexport type EventCallback = (event: Event) => boolean|void;\nexport abstract class DDBaseImplement {\n  /** returns the enable state, but you have to call enable()/disable() to change (as other things need to happen) */\n  public get disabled(): boolean   { return this._disabled; }\n\n  /** @internal */\n  protected _disabled: boolean; // initial state to differentiate from false\n  /** @internal */\n  protected _eventRegister: {\n    [eventName: string]: EventCallback;\n  } = {};\n\n  public on(event: string, callback: EventCallback): void {\n    this._eventRegister[event] = callback;\n  }\n\n  public off(event: string): void {\n    delete this._eventRegister[event];\n  }\n\n  public enable(): void {\n    this._disabled = false;\n  }\n\n  public disable(): void {\n    this._disabled = true;\n  }\n\n  public destroy(): void {\n    delete this._eventRegister;\n  }\n\n  public triggerEvent(eventName: string, event: Event): boolean|void {\n    if (!this.disabled && this._eventRegister && this._eventRegister[eventName])\n      return this._eventRegister[eventName](event);\n  }\n}\n\nexport interface HTMLElementExtendOpt<T> {\n  el: HTMLElement;\n  option: T;\n  updateOption(T): DDBaseImplement;\n}\n"],"mappings":";;AAAA;;;;;;;;AAMA,MAAsBA,eAAe;EAArCC,YAAA;IAME;IACU,KAAAC,cAAc,GAEpB,EAAE;EA0BR;EAlCE;EACA,IAAWC,QAAQA,CAAA;IAAgB,OAAO,IAAI,CAACC,SAAS;EAAE;EASnDC,EAAEA,CAACC,KAAa,EAAEC,QAAuB;IAC9C,IAAI,CAACL,cAAc,CAACI,KAAK,CAAC,GAAGC,QAAQ;EACvC;EAEOC,GAAGA,CAACF,KAAa;IACtB,OAAO,IAAI,CAACJ,cAAc,CAACI,KAAK,CAAC;EACnC;EAEOG,MAAMA,CAAA;IACX,IAAI,CAACL,SAAS,GAAG,KAAK;EACxB;EAEOM,OAAOA,CAAA;IACZ,IAAI,CAACN,SAAS,GAAG,IAAI;EACvB;EAEOO,OAAOA,CAAA;IACZ,OAAO,IAAI,CAACT,cAAc;EAC5B;EAEOU,YAAYA,CAACC,SAAiB,EAAEP,KAAY;IACjD,IAAI,CAAC,IAAI,CAACH,QAAQ,IAAI,IAAI,CAACD,cAAc,IAAI,IAAI,CAACA,cAAc,CAACW,SAAS,CAAC,EACzE,OAAO,IAAI,CAACX,cAAc,CAACW,SAAS,CAAC,CAACP,KAAK,CAAC;EAChD;;AAlCFQ,OAAA,CAAAd,eAAA,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}