{"ast":null,"code":"var _jsxFileName = \"/home/catarina.santos/litegride/src/App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport 'gridstack/dist/gridstack.min.css';\nimport './App.css';\nimport './litegride.css';\nimport { GridStack } from 'gridstack';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Tema from './assets/img/tema.jpg';\nimport ApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  return /*#__PURE__*/_jsxDEV(ApexChart, {\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n// function App(){\n\n//   const [chartDimensions, setChartDimensions] = useState({ width: null, height: null });\n//   const handleResize = (width, height) => {\n//     setChartDimensions({ width, height });\n//   };\n\n//   const getOptions = (type) => ({\n//     chart: {\n//       type,\n//     },\n//     responsive: {\n//       rules: [{\n//         condition: {\n//           maxWidth: '100%'\n//         },\n//         chartOptions: {\n//           legend: {\n//             enabled: false\n//           }\n//         }\n//       }]\n//     },\n//     title: {\n//       text: \"Gráfico\",\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Values',\n//       },\n//     },\n//     series: [\n//       {\n//         data: [1, 2, 1, 4, 3, 6],\n//       },\n//       {\n//         data: [2, 7, 0, 4, 6, 2],\n//       },\n//     ],\n//   });\n\n//   useEffect(() => {\n//     GridStack.init();\n\n//   }, []);\n\n//   return (\n//     <div className=\"App\">\n//       <img className=\"App-logo\" src={Tema} />\n//       <div className=\"grid-stack\" >\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\"> <img width=\"100%\" height=\"100%\" src={Tema} /></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\"><div id=\"chart\">\n//             <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\n//           </div></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <ReactResizeDetector handleWidth handleHeight onResize={handleResize}>\n//               <HighchartsReact highcharts={Highcharts} options={getOptions('line')} />\n//             </ReactResizeDetector>\n//           </div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('spline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('area')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('areaspline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('column')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('bar')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('pie')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('scatter')} /></div>\n//         </div>\n\n//       </div>\n//     </div>\n//   );\n// }\n_c = Chart;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Highcharts","HighchartsReact","GridStack","ReactResizeDetector","Tema","ApexChart","jsxDEV","_jsxDEV","Chart","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","$RefreshReg$"],"sources":["/home/catarina.santos/litegride/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport 'gridstack/dist/gridstack.min.css';\nimport './App.css';\nimport './litegride.css';\nimport { GridStack } from 'gridstack';\nimport ReactResizeDetector from 'react-resize-detector';\nimport Tema from './assets/img/tema.jpg';\nimport ApexChart from 'react-apexcharts';\n\n\nfunction Chart() {\n  return (\n    <ApexChart\n    options={options}\n    \n    />\n  )\n}\n\n// function App(){\n\n\n//   const [chartDimensions, setChartDimensions] = useState({ width: null, height: null });\n//   const handleResize = (width, height) => {\n//     setChartDimensions({ width, height });\n//   };\n\n//   const getOptions = (type) => ({\n//     chart: {\n//       type,\n//     },\n//     responsive: {\n//       rules: [{\n//         condition: {\n//           maxWidth: '100%'\n//         },\n//         chartOptions: {\n//           legend: {\n//             enabled: false\n//           }\n//         }\n//       }]\n//     },\n//     title: {\n//       text: \"Gráfico\",\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Values',\n//       },\n//     },\n//     series: [\n//       {\n//         data: [1, 2, 1, 4, 3, 6],\n//       },\n//       {\n//         data: [2, 7, 0, 4, 6, 2],\n//       },\n//     ],\n//   });\n\n//   useEffect(() => {\n//     GridStack.init();\n\n//   }, []);\n\n\n//   return (\n//     <div className=\"App\">\n//       <img className=\"App-logo\" src={Tema} />\n//       <div className=\"grid-stack\" >\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\"> <img width=\"100%\" height=\"100%\" src={Tema} /></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\"><div id=\"chart\">\n//             <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\n//           </div></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <ReactResizeDetector handleWidth handleHeight onResize={handleResize}>\n//               <HighchartsReact highcharts={Highcharts} options={getOptions('line')} />\n//             </ReactResizeDetector>\n//           </div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('spline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('area')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('areaspline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('column')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('bar')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('pie')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('scatter')} /></div>\n//         </div>\n\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAO,kCAAkC;AACzC,OAAO,WAAW;AAClB,OAAO,iBAAiB;AACxB,SAASC,SAAS,QAAQ,WAAW;AACrC,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,KAAKA,CAAA,EAAG;EACf,oBACED,OAAA,CAACF,SAAS;IACVI,OAAO,EAAEA;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEf;AAEN;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAAC,EAAA,GA9GSN,KAAK;AAgHd,eAAeO,GAAG;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}