{"ast":null,"code":"\"use strict\";\n\n/**\r\n * dd-resizable-handle.ts 7.2.3\r\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\r\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DDResizableHandle = void 0;\nconst dd_touch_1 = require(\"./dd-touch\");\nclass DDResizableHandle {\n  constructor(host, direction, option) {\n    /** @internal true after we've moved enough pixels to start a resize */\n    this.moving = false;\n    this.host = host;\n    this.dir = direction;\n    this.option = option;\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseDown = this._mouseDown.bind(this);\n    this._mouseMove = this._mouseMove.bind(this);\n    this._mouseUp = this._mouseUp.bind(this);\n    this._init();\n  }\n  /** @internal */\n  _init() {\n    const el = document.createElement('div');\n    el.classList.add('ui-resizable-handle');\n    el.classList.add(`${DDResizableHandle.prefix}${this.dir}`);\n    el.style.zIndex = '100';\n    el.style.userSelect = 'none';\n    this.el = el;\n    this.host.appendChild(this.el);\n    this.el.addEventListener('mousedown', this._mouseDown);\n    if (dd_touch_1.isTouch) {\n      this.el.addEventListener('touchstart', dd_touch_1.touchstart);\n      this.el.addEventListener('pointerdown', dd_touch_1.pointerdown);\n      // this.el.style.touchAction = 'none'; // not needed unlike pointerdown doc comment\n    }\n\n    return this;\n  }\n  /** call this when resize handle needs to be removed and cleaned up */\n  destroy() {\n    if (this.moving) this._mouseUp(this.mouseDownEvent);\n    this.el.removeEventListener('mousedown', this._mouseDown);\n    if (dd_touch_1.isTouch) {\n      this.el.removeEventListener('touchstart', dd_touch_1.touchstart);\n      this.el.removeEventListener('pointerdown', dd_touch_1.pointerdown);\n    }\n    this.host.removeChild(this.el);\n    delete this.el;\n    delete this.host;\n    return this;\n  }\n  /** @internal called on mouse down on us: capture move on the entire document (mouse might not stay on us) until we release the mouse */\n  _mouseDown(e) {\n    this.mouseDownEvent = e;\n    document.addEventListener('mousemove', this._mouseMove, true); // capture, not bubble\n    document.addEventListener('mouseup', this._mouseUp, true);\n    if (dd_touch_1.isTouch) {\n      this.el.addEventListener('touchmove', dd_touch_1.touchmove);\n      this.el.addEventListener('touchend', dd_touch_1.touchend);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  /** @internal */\n  _mouseMove(e) {\n    let s = this.mouseDownEvent;\n    if (this.moving) {\n      this._triggerEvent('move', e);\n    } else if (Math.abs(e.x - s.x) + Math.abs(e.y - s.y) > 2) {\n      // don't start unless we've moved at least 3 pixels\n      this.moving = true;\n      this._triggerEvent('start', this.mouseDownEvent);\n      this._triggerEvent('move', e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  /** @internal */\n  _mouseUp(e) {\n    if (this.moving) {\n      this._triggerEvent('stop', e);\n    }\n    document.removeEventListener('mousemove', this._mouseMove, true);\n    document.removeEventListener('mouseup', this._mouseUp, true);\n    if (dd_touch_1.isTouch) {\n      this.el.removeEventListener('touchmove', dd_touch_1.touchmove);\n      this.el.removeEventListener('touchend', dd_touch_1.touchend);\n    }\n    delete this.moving;\n    delete this.mouseDownEvent;\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  /** @internal */\n  _triggerEvent(name, event) {\n    if (this.option[name]) this.option[name](event);\n    return this;\n  }\n}\nexports.DDResizableHandle = DDResizableHandle;\n/** @internal */\nDDResizableHandle.prefix = 'ui-resizable-';","map":{"version":3,"names":["dd_touch_1","require","DDResizableHandle","constructor","host","direction","option","moving","dir","_mouseDown","bind","_mouseMove","_mouseUp","_init","el","document","createElement","classList","add","prefix","style","zIndex","userSelect","appendChild","addEventListener","isTouch","touchstart","pointerdown","destroy","mouseDownEvent","removeEventListener","removeChild","e","touchmove","touchend","stopPropagation","preventDefault","s","_triggerEvent","Math","abs","x","y","name","event","exports"],"sources":["/home/catarina.santos/litegride/node_modules/gridstack/src/dd-resizable-handle.ts"],"sourcesContent":["/**\n * dd-resizable-handle.ts 7.2.3\n * Copyright (c) 2021-2022 Alain Dumesny - see GridStack root license\n */\n\nimport { isTouch, pointerdown, touchend, touchmove, touchstart } from './dd-touch';\n\nexport interface DDResizableHandleOpt {\n  start?: (event) => void;\n  move?: (event) => void;\n  stop?: (event) => void;\n}\n\nexport class DDResizableHandle {\n  /** @internal */\n  protected el: HTMLElement;\n  /** @internal */\n  protected host: HTMLElement;\n  /** @internal */\n  protected option: DDResizableHandleOpt;\n  /** @internal */\n  protected dir: string;\n  /** @internal true after we've moved enough pixels to start a resize */\n  protected moving = false;\n  /** @internal */\n  protected mouseDownEvent: MouseEvent;\n  /** @internal */\n  protected static prefix = 'ui-resizable-';\n\n  constructor(host: HTMLElement, direction: string, option: DDResizableHandleOpt) {\n    this.host = host;\n    this.dir = direction;\n    this.option = option;\n    // create var event binding so we can easily remove and still look like TS methods (unlike anonymous functions)\n    this._mouseDown = this._mouseDown.bind(this);\n    this._mouseMove = this._mouseMove.bind(this);\n    this._mouseUp = this._mouseUp.bind(this);\n\n    this._init();\n  }\n\n  /** @internal */\n  protected _init(): DDResizableHandle {\n    const el = document.createElement('div');\n    el.classList.add('ui-resizable-handle');\n    el.classList.add(`${DDResizableHandle.prefix}${this.dir}`);\n    el.style.zIndex = '100';\n    el.style.userSelect = 'none';\n    this.el = el;\n    this.host.appendChild(this.el);\n    this.el.addEventListener('mousedown', this._mouseDown);\n    if (isTouch) {\n      this.el.addEventListener('touchstart', touchstart);\n      this.el.addEventListener('pointerdown', pointerdown);\n      // this.el.style.touchAction = 'none'; // not needed unlike pointerdown doc comment\n    }\n    return this;\n  }\n\n  /** call this when resize handle needs to be removed and cleaned up */\n  public destroy(): DDResizableHandle {\n    if (this.moving) this._mouseUp(this.mouseDownEvent);\n    this.el.removeEventListener('mousedown', this._mouseDown);\n    if (isTouch) {\n      this.el.removeEventListener('touchstart', touchstart);\n      this.el.removeEventListener('pointerdown', pointerdown);\n    }\n    this.host.removeChild(this.el);\n    delete this.el;\n    delete this.host;\n    return this;\n  }\n\n  /** @internal called on mouse down on us: capture move on the entire document (mouse might not stay on us) until we release the mouse */\n  protected _mouseDown(e: MouseEvent): void {\n    this.mouseDownEvent = e;\n    document.addEventListener('mousemove', this._mouseMove, true); // capture, not bubble\n    document.addEventListener('mouseup', this._mouseUp, true);\n    if (isTouch) {\n      this.el.addEventListener('touchmove', touchmove);\n      this.el.addEventListener('touchend', touchend);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  /** @internal */\n  protected _mouseMove(e: MouseEvent): void {\n    let s = this.mouseDownEvent;\n    if (this.moving) {\n      this._triggerEvent('move', e);\n    } else if (Math.abs(e.x - s.x) + Math.abs(e.y - s.y) > 2) {\n      // don't start unless we've moved at least 3 pixels\n      this.moving = true;\n      this._triggerEvent('start', this.mouseDownEvent);\n      this._triggerEvent('move', e);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  /** @internal */\n  protected _mouseUp(e: MouseEvent): void {\n    if (this.moving) {\n      this._triggerEvent('stop', e);\n    }\n    document.removeEventListener('mousemove', this._mouseMove, true);\n    document.removeEventListener('mouseup', this._mouseUp, true);\n    if (isTouch) {\n      this.el.removeEventListener('touchmove', touchmove);\n      this.el.removeEventListener('touchend', touchend);\n    }\n    delete this.moving;\n    delete this.mouseDownEvent;\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  /** @internal */\n  protected _triggerEvent(name: string, event: MouseEvent): DDResizableHandle {\n    if (this.option[name]) this.option[name](event);\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}