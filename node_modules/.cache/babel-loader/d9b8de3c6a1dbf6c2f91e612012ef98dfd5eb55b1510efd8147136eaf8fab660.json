{"ast":null,"code":"var _jsxFileName = \"/home/catarina.santos/litegride/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport 'gridstack/dist/gridstack.min.css';\nimport './App.css';\nimport './litegride.css';\nimport { GridStack } from 'gridstack';\nimport Tema from './assets/img/tema.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  chart: {\n    renderTo: 'chartContainer'\n  },\n  title: {\n    text: 'My Chart'\n  },\n  series: [{\n    data: [1, 2, 3, 4, 5]\n  }],\n  responsive: {\n    rules: [{\n      condition: {\n        maxWidth: '100%'\n      },\n      chartOptions: {\n        legend: {\n          enabled: false\n        }\n      }\n    }]\n  }\n};\nfunction App() {\n  _s();\n  //const chartContainerRef = useRef(null);\n\n  useEffect(() => {\n    GridStack.init();\n\n    // const handleResize = () => {\n    //   Highcharts.charts.forEach(chart => {\n    //     if (chart && chart.renderTo === chartContainerRef.current) {\n    //       chart.reflow();\n    //     }\n    //   });\n    // };\n\n    // handleResize();\n\n    // window.addEventListener('resize', handleResize);\n\n    // return () => {\n    //   window.removeEventListener('resize', handleResize);\n    // };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-stack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  // return (\n  //   <div className=\"App\">\n  //     <img className=\"App-logo\" src={Tema} />\n  //     <div className=\"grid-stack\" >\n\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\"> <img width=\"100%\" height=\"100%\" src={Tema} /></div>\n  //       </div>\n\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //         <div id=\"chartContainer\" style={{ width: '100%', height: '400px' }}>\n  //       <HighchartsReact highcharts={Highcharts} options={getOptions('line')} />\n  //     </div></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('spline')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('area')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('areaspline')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('column')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('bar')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('pie')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('scatter')} /></div>\n  //       </div>\n\n  //     </div>\n  //   </div>\n  // );\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Highcharts","HighchartsReact","GridStack","Tema","jsxDEV","_jsxDEV","options","chart","renderTo","title","text","series","data","responsive","rules","condition","maxWidth","chartOptions","legend","enabled","App","_s","init","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/catarina.santos/litegride/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport 'gridstack/dist/gridstack.min.css';\nimport './App.css';\nimport './litegride.css';\nimport { GridStack } from 'gridstack';\nimport Tema from './assets/img/tema.jpg';\n\nconst options = {\n  chart: {\n    renderTo: 'chartContainer',\n  },\n  title: {\n    text: 'My Chart',\n  },\n  series: [{\n    data: [1, 2, 3, 4, 5],\n  }],\n  responsive: {\n    rules: [{\n      condition: {\n        maxWidth: '100%',\n      },\n      chartOptions: {\n        legend: {\n          enabled: false,\n        },\n      },\n    }],\n  },\n};\n\nfunction App() {\n\n  //const chartContainerRef = useRef(null);\n\n  \n\n  useEffect(() => {\n    GridStack.init();\n\n    // const handleResize = () => {\n    //   Highcharts.charts.forEach(chart => {\n    //     if (chart && chart.renderTo === chartContainerRef.current) {\n    //       chart.reflow();\n    //     }\n    //   });\n    // };\n\n    // handleResize();\n\n    // window.addEventListener('resize', handleResize);\n\n    // return () => {\n    //   window.removeEventListener('resize', handleResize);\n    // };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"grid-stack\" >\n\n      </div>\n      \n    </div>\n  );\n\n\n  // return (\n  //   <div className=\"App\">\n  //     <img className=\"App-logo\" src={Tema} />\n  //     <div className=\"grid-stack\" >\n\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\"> <img width=\"100%\" height=\"100%\" src={Tema} /></div>\n  //       </div>\n\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //         <div id=\"chartContainer\" style={{ width: '100%', height: '400px' }}>\n  //       <HighchartsReact highcharts={Highcharts} options={getOptions('line')} />\n  //     </div></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('spline')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('area')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('areaspline')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('column')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('bar')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('pie')} /></div>\n  //       </div>\n  //       <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n  //         <div className=\"grid-stack-item-content\">\n  //           <HighchartsReact highcharts={Highcharts} options={getOptions('scatter')} /></div>\n  //       </div>\n\n  //     </div>\n  //   </div>\n  // );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAO,kCAAkC;AACzC,OAAO,WAAW;AAClB,OAAO,iBAAiB;AACxB,SAASC,SAAS,QAAQ,WAAW;AACrC,OAAOC,IAAI,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACLC,IAAI,EAAE;EACR,CAAC;EACDC,MAAM,EAAE,CAAC;IACPC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACtB,CAAC,CAAC;EACFC,UAAU,EAAE;IACVC,KAAK,EAAE,CAAC;MACNC,SAAS,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,YAAY,EAAE;QACZC,MAAM,EAAE;UACNC,OAAO,EAAE;QACX;MACF;IACF,CAAC;EACH;AACF,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;;EAIAtB,SAAS,CAAC,MAAM;IACdG,SAAS,CAACoB,IAAI,EAAE;;IAEhB;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;;IAEA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBnB,OAAA;MAAKkB,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAErB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEF;;EAIR;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;AACF;AAACP,EAAA,CAnFQD,GAAG;AAAAS,EAAA,GAAHT,GAAG;AAqFZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}