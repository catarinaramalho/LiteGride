{"ast":null,"code":"import React, { useState } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport 'gridstack/dist/gridstack.min.css';\nimport './App.css';\nimport './litegride.css';\nimport { GridStack } from 'gridstack';\nimport Tema from './assets/img/tema.jpg';\n\n// function App() {\n//   const [options, setOptions] = useState({\n//     title: 'Gráfico de Pizza'\n//   });\n//   const [optionsBar, setOptionsBar] = useState({\n//     title: 'Gráfico de Barra'\n//   });\n//   const [data, setData] = useState([\n//     ['Linguagens', 'Quantidade'],\n//     ['React', 100],\n//     ['Angula', 80],\n//     ['Vue', 50],\n//   ]);\n//   const [dataBar, setDataBar] = useState([\n//     ['Cidades', '2010 População', '2000 População'],\n//     ['New York City, NY', 8175000, 8008000],\n//     ['Los Angeles, CA', 3792000, 3694000],\n//     ['Chicago, IL', 2695000, 2896000],\n//     ['Houston, TX', 2099000, 1953000],\n//     ['Philadelphia, PA', 1526000, 1517000],\n//   ]);\n//   const getOptions = (type) => ({\n//     chart: {\n//       type,\n//       width: 500,\n//       height: 300,\n//     },\n//     title: {\n//       text: \"Gráfico\",\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Values',\n//       },\n//     },\n//     series: [\n//       {\n//         data: [1, 2, 1, 4, 3, 6],\n//       },\n//       {\n//         data: [2, 7, 0, 4, 6, 2],\n//       },\n//     ],\n//   });\n\n//   GridStack.init();\n//   return (\n//     <div className=\"App\">\n//       <img className=\"App-logo\" src={Tema} />\n//       <div className=\"grid-stack\">\n//         <div className=\"grid-stack-item\">\n//           <div className=\"grid-stack-item-content\">\n//             <Chart\n//               width=\"100%\"\n//               height=\"100%\"\n//               chartType=\"PieChart\"\n//               data={data}\n//               options={options}\n//             />\n//           </div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"BarChart\"\n//             data={dataBar}\n//             options={optionsBar}\n//           /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"ScatterChart\"\n//             data={[[\"Age\", \"Weight\"], [4, 5.5], [8, 12]]}\n\n//             legendToggle\n//           /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartEvents={[\n//               {\n//                 eventName: \"select\",\n//                 callback: ({ chartWrapper }) => {\n//                   const chart = chartWrapper.getChart();\n//                   const selection = chart.getSelection();\n//                   if (selection.length === 0) return;\n//                   const region = data[selection[0].row + 1];\n//                   console.log(\"Selected : \" + region);\n//                 },\n//               },\n//             ]}\n//             chartType=\"GeoChart\"\n\n//             data={data}\n//           /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"Histogram\"\n//             data={data}\n//             options={options}\n//           /></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"> <Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"SteppedAreaChart\"\n//             data={data}\n//             options={options}\n//             legendToggle\n//           /></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\"> <img width=\"100%\" height=\"100%\" src={Tema} /></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('line')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact  highcharts={Highcharts} options={getOptions('spline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact  highcharts={Highcharts} options={getOptions('area')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('areaspline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('column')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('bar')} /></div> \n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('pie')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('scatter')} /></div>\n//         </div>\n\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":["React","useState","Chart","Highcharts","HighchartsReact","GridStack","Tema"],"sources":["/home/catarina.santos/litegride/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport 'gridstack/dist/gridstack.min.css';\nimport './App.css';\nimport './litegride.css';\nimport { GridStack } from 'gridstack';\nimport Tema from './assets/img/tema.jpg';\n\n// function App() {\n//   const [options, setOptions] = useState({\n//     title: 'Gráfico de Pizza'\n//   });\n//   const [optionsBar, setOptionsBar] = useState({\n//     title: 'Gráfico de Barra'\n//   });\n//   const [data, setData] = useState([\n//     ['Linguagens', 'Quantidade'],\n//     ['React', 100],\n//     ['Angula', 80],\n//     ['Vue', 50],\n//   ]);\n//   const [dataBar, setDataBar] = useState([\n//     ['Cidades', '2010 População', '2000 População'],\n//     ['New York City, NY', 8175000, 8008000],\n//     ['Los Angeles, CA', 3792000, 3694000],\n//     ['Chicago, IL', 2695000, 2896000],\n//     ['Houston, TX', 2099000, 1953000],\n//     ['Philadelphia, PA', 1526000, 1517000],\n//   ]);\n//   const getOptions = (type) => ({\n//     chart: {\n//       type,\n//       width: 500,\n//       height: 300,\n//     },\n//     title: {\n//       text: \"Gráfico\",\n//     },\n//     yAxis: {\n//       title: {\n//         text: 'Values',\n//       },\n//     },\n//     series: [\n//       {\n//         data: [1, 2, 1, 4, 3, 6],\n//       },\n//       {\n//         data: [2, 7, 0, 4, 6, 2],\n//       },\n//     ],\n//   });\n\n//   GridStack.init();\n//   return (\n//     <div className=\"App\">\n//       <img className=\"App-logo\" src={Tema} />\n//       <div className=\"grid-stack\">\n//         <div className=\"grid-stack-item\">\n//           <div className=\"grid-stack-item-content\">\n//             <Chart\n//               width=\"100%\"\n//               height=\"100%\"\n//               chartType=\"PieChart\"\n//               data={data}\n//               options={options}\n//             />\n//           </div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"BarChart\"\n//             data={dataBar}\n//             options={optionsBar}\n//           /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"ScatterChart\"\n//             data={[[\"Age\", \"Weight\"], [4, 5.5], [8, 12]]}\n\n//             legendToggle\n//           /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartEvents={[\n//               {\n//                 eventName: \"select\",\n//                 callback: ({ chartWrapper }) => {\n//                   const chart = chartWrapper.getChart();\n//                   const selection = chart.getSelection();\n//                   if (selection.length === 0) return;\n//                   const region = data[selection[0].row + 1];\n//                   console.log(\"Selected : \" + region);\n//                 },\n//               },\n//             ]}\n//             chartType=\"GeoChart\"\n\n//             data={data}\n//           /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"><Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"Histogram\"\n//             data={data}\n//             options={options}\n//           /></div>\n//         </div>\n\n//         <div className=\"grid-stack-item\" gs-w=\"2\">\n//           <div className=\"grid-stack-item-content\"> <Chart\n//             width=\"100%\"\n//             height=\"100%\"\n//             chartType=\"SteppedAreaChart\"\n//             data={data}\n//             options={options}\n//             legendToggle\n//           /></div>\n//         </div>\n        \n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\"> <img width=\"100%\" height=\"100%\" src={Tema} /></div>\n//         </div>\n        \n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('line')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact  highcharts={Highcharts} options={getOptions('spline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact  highcharts={Highcharts} options={getOptions('area')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('areaspline')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('column')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('bar')} /></div> \n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('pie')} /></div>\n//         </div>\n//         <div className=\"grid-stack-item\" gs-w=\"3\" gs-h=\"2\">\n//           <div className=\"grid-stack-item-content\">\n//             <HighchartsReact highcharts={Highcharts} options={getOptions('scatter')} /></div>\n//         </div>\n\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAO,kCAAkC;AACzC,OAAO,WAAW;AAClB,OAAO,iBAAiB;AACxB,SAASC,SAAS,QAAQ,WAAW;AACrC,OAAOC,IAAI,MAAM,uBAAuB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}